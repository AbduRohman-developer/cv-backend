<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="287d78e9-bf03-4868-991f-ea08dd3ead7c" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/api/errors/err.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/v1/controllers/cv.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/v1/models/cv.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/connection/build_url.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/jwt/extact.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/jwt/generate.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/storage/redis/redis.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/storage/repository/redis.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/cespare/xxhash/v2/LICENSE.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/cespare/xxhash/v2/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/cespare/xxhash/v2/xxhash.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/cespare/xxhash/v2/xxhash_amd64.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/cespare/xxhash/v2/xxhash_amd64.s" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/cespare/xxhash/v2/xxhash_other.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/cespare/xxhash/v2/xxhash_safe.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/cespare/xxhash/v2/xxhash_unsafe.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/dgryski/go-rendezvous/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/dgryski/go-rendezvous/rdv.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/.golangci.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/.prettierrc.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/CHANGELOG.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/Makefile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/RELEASING.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/cluster.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/cluster_commands.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/command.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/commands.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/doc.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/error.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/internal/arg.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/internal/hashtag/hashtag.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/internal/hscan/hscan.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/internal/hscan/structmap.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/internal/internal.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/internal/log.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/internal/once.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/internal/pool/conn.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/internal/pool/pool.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/internal/pool/pool_single.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/internal/pool/pool_sticky.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/internal/proto/reader.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/internal/proto/scan.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/internal/proto/writer.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/internal/rand/rand.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/internal/safe.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/internal/unsafe.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/internal/util.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/internal/util/safe.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/internal/util/strconv.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/internal/util/unsafe.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/iterator.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/options.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/package.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/pipeline.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/pubsub.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/redis.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/result.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/ring.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/script.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/sentinel.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/tx.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/universal.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/go-redis/redis/v8/version.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/joho/godotenv/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/joho/godotenv/.travis.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/joho/godotenv/LICENCE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/joho/godotenv/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/joho/godotenv/autoload/autoload.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/vendor/github.com/joho/godotenv/godotenv.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/config/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/config/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/connection/connect.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/connection/connect.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/middleware/authorizer.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/middleware/authorizer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/cv.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/cv.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/storage/postgres.go" beforeDir="false" afterPath="$PROJECT_DIR$/storage/postgres/postgres.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/storage/repository.go" beforeDir="false" afterPath="$PROJECT_DIR$/storage/repository/postgres.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vendor/modules.txt" beforeDir="false" afterPath="$PROJECT_DIR$/vendor/modules.txt" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2HIGk9j7QddAcn6pAdHGarixY8X" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.format.on.save.advertiser.fired": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "RunOnceActivity.go.vendoring.notification.had.been.shown": "true",
    "RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed": "true",
    "WebServerToolWindowFactoryState": "false",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "/home/akbarshoh/go/src/github.com/oxo/user_service",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "project.propVCSSupport.DirectoryMappings"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/scripts" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/storage/repository" />
      <recent name="$PROJECT_DIR$/storage/postgres" />
      <recent name="$PROJECT_DIR$/api/v1" />
      <recent name="$PROJECT_DIR$/pkg/model" />
      <recent name="$PROJECT_DIR$/pkg/postgres" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.go build github.com/AbduRohman-developer/cv-backend/cmd">
    <configuration name="go build github.com/AbduRohman-developer/cv-backend/cmd" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="backend" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/AbduRohman-developer/cv-backend/cmd" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/cmd/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="generated-requests | #1" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$APPLICATION_CONFIG_DIR$/scratches/generated-requests.http" requestIdentifier="#1" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="set-env" type="MAKEFILE_TARGET_RUN_CONFIGURATION" factoryName="Makefile" temporary="true">
      <makefile filename="$PROJECT_DIR$/Makefile" target="set-env" workingDirectory="" arguments="">
        <envs />
      </makefile>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build github.com/AbduRohman-developer/cv-backend/cmd" />
        <item itemvalue="HTTP Request.generated-requests | #1" />
        <item itemvalue="Makefile Target.set-env" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>